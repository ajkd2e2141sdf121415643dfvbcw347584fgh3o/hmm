	_G.Color = _G.Color or Color3.fromRGB(0, 86, 255)
	local UserInputService = game:GetService("UserInputService")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local TweenService = game:GetService("TweenService")
	local tween = game:service"TweenService"
	local RunService = game:GetService("RunService")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local GuiService = game:GetService("GuiService")

	loadstring(game:HttpGet("https://raw.githubusercontent.com/SSDAWGDFHTEHVFFSGXCVBSDFBFDGWGSDVDDSXC/d/main/perpid"))()
	function Vec(text)
		local Notification = require(game.ReplicatedStorage.Notification)
		local notification = Notification.new(text)
		notification.Duration = 4
		notification:Display()
	end
	local function tablefound(ta, object)
		for i,v in pairs(ta) do
			if v == object then
				return true
			end
		end
		return false
	end
	
	local ActualTypes = {
		RoundFrame = "ImageLabel",
		Shadow = "ImageLabel",
		Circle = "ImageLabel",
		CircleButton = "ImageButton",
		Frame = "Frame",
		Label = "TextLabel",
		Button = "TextButton",
		SmoothButton = "ImageButton",
		Box = "TextBox",
		ScrollingFrame = "ScrollingFrame",
		Menu = "ImageButton",
		NavBar = "ImageButton"
	}
	
	local Properties = {
		RoundFrame = {
			BackgroundTransparency = 1,
			Image = "http://www.roblox.com/asset/?id=5554237731",
			ScaleType = Enum.ScaleType.Slice,
			SliceCenter = Rect.new(3,3,297,297)
		},
		SmoothButton = {
			AutoButtonColor = false,
			BackgroundTransparency = 1,
			Image = "http://www.roblox.com/asset/?id=5554237731",
			ScaleType = Enum.ScaleType.Slice,
			SliceCenter = Rect.new(3,3,297,297)
		},
		Shadow = {
			Name = "Shadow",
			BackgroundTransparency = 1,
			Image = "http://www.roblox.com/asset/?id=5554236805",
			ScaleType = Enum.ScaleType.Slice,
			SliceCenter = Rect.new(23,23,277,277),
			Size = UDim2.fromScale(1,1) + UDim2.fromOffset(30,30),
			Position = UDim2.fromOffset(-15,-15)
		},
		Circle = {
			BackgroundTransparency = 1,
			Image = "http://www.roblox.com/asset/?id=5554831670"
		},
		CircleButton = {
			BackgroundTransparency = 1,
			AutoButtonColor = false,
			Image = "http://www.roblox.com/asset/?id=5554831670"
		},
		Frame = {
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			Size = UDim2.fromScale(1,1)
		},
		Label = {
			BackgroundTransparency = 1,
			Position = UDim2.fromOffset(5,0),
			Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			TextSize = 14,
			TextXAlignment = Enum.TextXAlignment.Left
		},
		Button = {
			BackgroundTransparency = 1,
			Position = UDim2.fromOffset(5,0),
			Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			TextSize = 14,
			TextXAlignment = Enum.TextXAlignment.Left
		},
		Box = {
			BackgroundTransparency = 1,
			Position = UDim2.fromOffset(5,0),
			Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			TextSize = 14,
			TextXAlignment = Enum.TextXAlignment.Left
		},
		ScrollingFrame = {
			BackgroundTransparency = 1,
			ScrollBarThickness = 0,
			CanvasSize = UDim2.fromScale(0,0),
			Size = UDim2.fromScale(1,1)
		},
		Menu = {
			Name = "More",
			AutoButtonColor = false,
			BackgroundTransparency = 1,
			Image = "http://www.roblox.com/asset/?id=5555108481",
			Size = UDim2.fromOffset(20,20),
			Position = UDim2.fromScale(1,0.5) - UDim2.fromOffset(25,10)
		},
		NavBar = {
			Name = "SheetToggle",
			Image = "http://www.roblox.com/asset/?id=5576439039",
			BackgroundTransparency = 1,
			Size = UDim2.fromOffset(20,20),
			Position = UDim2.fromOffset(5,5),
			AutoButtonColor = false
		}
	}
	
	local Types = {
		"RoundFrame",
		"Shadow",
		"Circle",
		"CircleButton",
		"Frame",
		"Label",
		"Button",
		"SmoothButton",
		"Box",
		"ScrollingFrame",
		"Menu",
		"NavBar"
	}
	
	function FindType(String)
		for _, Type in next, Types do
			if Type:sub(1, #String):lower() == String:lower() then
				return Type
			end
		end
		return false
	end
	
	local Objects = {}
	
	function Objects.new(Type)
		local TargetType = FindType(Type)
		if TargetType then
			local NewImage = Instance.new(ActualTypes[TargetType])
			if Properties[TargetType] then
				for Property, Value in next, Properties[TargetType] do
					NewImage[Property] = Value
				end
			end
			return NewImage
		else
			return Instance.new(Type)
		end
	end
	
	local function GetXY(GuiObject)
		local Max, May = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
		local Px, Py = math.clamp(Mouse.X - GuiObject.AbsolutePosition.X, 0, Max), math.clamp(Mouse.Y - GuiObject.AbsolutePosition.Y, 0, May)
		return Px/Max, Py/May
	end
	
	local function CircleAnim(GuiObject, EndColour, StartColour)
		local PX, PY = GetXY(GuiObject)
		local Circle = Objects.new("Shadow")
		Circle.Size = UDim2.fromScale(0,0)
		Circle.Position = UDim2.fromScale(PX,PY)
		Circle.ImageColor3 = StartColour or GuiObject.ImageColor3
		Circle.ZIndex = 200
		Circle.Parent = GuiObject
		local Size = GuiObject.AbsoluteSize.X
		TweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(PX,PY) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, ImageColor3 = EndColour, Size = UDim2.fromOffset(Size,Size)}):Play()
		spawn(function()
			wait(0.5)
			Circle:Destroy()
		end)
	end
	
	local function MakeDraggable(topbarobject, object)
		local Dragging = nil
		local DragInput = nil
		local DragStart = nil
		local StartPosition = nil
	
		local function Update(input)
			local Delta = input.Position - DragStart
			local pos =
				UDim2.new(
					StartPosition.X.Scale,
					StartPosition.X.Offset + Delta.X,
					StartPosition.Y.Scale,
					StartPosition.Y.Offset + Delta.Y
				)
			local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
			Tween:Play()
		end
	
		topbarobject.InputBegan:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					Dragging = true
					DragStart = input.Position
					StartPosition = object.Position
	
					input.Changed:Connect(
						function()
							if input.UserInputState == Enum.UserInputState.End then
								Dragging = false
							end
						end
					)
				end
			end
		)
	
		topbarobject.InputChanged:Connect(
			function(input)
				if
					input.UserInputType == Enum.UserInputType.MouseMovement or
					input.UserInputType == Enum.UserInputType.Touch
				then
					DragInput = input
				end
			end
		)
	
		UserInputService.InputChanged:Connect(
			function(input)
				if input == DragInput and Dragging then
					Update(input)
				end
			end
		)
	end
	
	local UIConfig = {Bind = Enum.KeyCode.F1}
	local chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	local length = 20
	local randomString = ""
	
	math.randomseed(os.time())
	
	charTable = {}
	for c in chars:gmatch "." do
		table.insert(charTable, c)
	end
	
	for i = 1, length do
		randomString = randomString .. charTable[math.random(1, #charTable)]
	end
	
	for i, v in pairs(game.CoreGui:WaitForChild("RobloxGui"):WaitForChild("Modules"):WaitForChild("Flags"):GetChildren()) do
		if v.ClassName == "ScreenGui" then
			for i1, v1 in pairs(v:GetChildren()) do
				if v1.Name == "Main" then
					do
						local ui = v
						if ui then
							ui:Destroy()
						end
					end
				end
			end
		end
	end
	function CircleClick(Button, X, Y)
		coroutine.resume(
			coroutine.create(
				function()
					local Circle = Instance.new("ImageLabel")
					Circle.Parent = Button
					Circle.Name = "Circle"
					Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Circle.BackgroundTransparency = 1.000
					Circle.ZIndex = 10
					Circle.Image = "rbxassetid://266543268"
					Circle.ImageColor3 = Color3.fromRGB(255, 255, 255)
					Circle.ImageTransparency = 0.7
					local NewX = X - Circle.AbsolutePosition.X
					local NewY = Y - Circle.AbsolutePosition.Y
					Circle.Position = UDim2.new(0, NewX, 0, NewY)
	
					local Time = 0.2
					Circle:TweenSizeAndPosition(
						UDim2.new(0, 30.25, 0, 30.25),
						UDim2.new(0, NewX - 15, 0, NewY - 10),
						"Out",
						"Quad",
						Time,
						false,
						nil
					)
					for i = 1, 10 do
						Circle.ImageTransparency = Circle.ImageTransparency + 0.01
						wait(Time / 10)
					end
					Circle:Destroy()
				end
			)
		)
	end
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	function dragify(Frame, object)
		dragToggle = nil
		dragSpeed = .25
		dragInput = nil
		dragStart = nil
		dragPos = nil
	
		function updateInput(input)
			Delta = input.Position - dragStart
			Position =
				UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(object, TweenInfo.new(dragSpeed), {Position = Position}):Play()
		end
	
		Frame.InputBegan:Connect(
			function(input)
				if
					(input.UserInputType == Enum.UserInputType.MouseButton1 or
						input.UserInputType == Enum.UserInputType.Touch)
				then
					dragToggle = true
					dragStart = input.Position
					startPos = object.Position
					input.Changed:Connect(
						function()
							if (input.UserInputState == Enum.UserInputState.End) then
								dragToggle = false
							end
						end
					)
				end
			end
		)
	
		Frame.InputChanged:Connect(
			function(input)
				if
					(input.UserInputType == Enum.UserInputType.MouseMovement or
						input.UserInputType == Enum.UserInputType.Touch)
				then
					dragInput = input
				end
			end
		)
	
		game:GetService("UserInputService").InputChanged:Connect(
		function(input)
			if (input == dragInput and dragToggle) then
				updateInput(input)
			end
		end
		)
	end
	
	local UI = Instance.new("ScreenGui")
	UI.Name = randomString
	UI.Parent = game.CoreGui:WaitForChild("RobloxGui"):WaitForChild("Modules"):WaitForChild("Flags")
	UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
	VectorHub = {}
	
	function VectorHub:Destroy()
		VectorHub:Destroy()
	end
	
local function MakeResizable(resizeHandle, object, minSize, maxSize)
    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")

    local Resizing = false
    local ResizeInput = nil
    local ResizeStart = nil
    local StartSize = nil

    minSize = minSize or Vector2.new(200, 200)
    maxSize = maxSize or Vector2.new(800, 600)

    local function Update(input)
        if Resizing then
            local Delta = input.Position - ResizeStart
            local newWidth = math.clamp(StartSize.X + Delta.X, minSize.X, maxSize.X)
            local newHeight = math.clamp(StartSize.Y + Delta.Y, minSize.Y, maxSize.Y)
            local newSize = UDim2.new(0, newWidth, 0, newHeight)
            local Tween = TweenService:Create(object, TweenInfo.new(0.1), {Size = newSize})
            Tween:Play()
        end
    end

    resizeHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Resizing = true
            ResizeStart = input.Position
            StartSize = Vector2.new(object.Size.X.Offset, object.Size.Y.Offset)

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Resizing = false
                end
            end)
        end
    end)

    resizeHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            ResizeInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == ResizeInput and Resizing then
            Update(input)
        end
    end)
end	

function VectorHub:Evil()
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Top = Instance.new("Frame")
    local TabHolder = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")
    local TabContainer = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
    local UIPadding = Instance.new("UIPadding")
    local Logo = Instance.new("ImageLabel")
    local Logo_Background = Instance.new("ImageLabel")
    local Title = Instance.new("TextLabel")
    local Welcome = Instance.new("TextLabel")

    Main.Name = "Main"
    Main.Parent = UI
    Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 555, 0, 0)
    Main.ClipsDescendants = true
    Main.AnchorPoint = Vector2.new(0.5, 0.5)

    IsOnMobile = table.find({Enum.Platform.Android, Enum.Platform.IOS}, game:GetService("UserInputService"):GetPlatform())
    if IsOnMobile then 
    Main:TweenSize(UDim2.new(0,588,0,370),"Out","Quad",0.5,false)
    else
    Main:TweenSize(UDim2.new(0,588,0,440),"Out","Quad",0.5,false)
    end

    Logo.Name = "Logo"
    Logo.Parent = Main
    Logo.Active = true
    Logo.AnchorPoint = Vector2.new(0,0)
    Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Logo.BackgroundTransparency = 1.000
    Logo.Position = UDim2.new(0, 10, 0, 10)
    Logo.Size = UDim2.new(0, 30, 0, 30)
    Logo.ImageTransparency = 0
    Logo.Image = "rbxassetid://14645512457"
    
    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0, 45, 0, 10)
    Title.Size = UDim2.new(0, 483, 0, 31)
    Title.Font = Enum.Font.FredokaOne
    Title.Text = "Vector"
    Title.TextColor3 = _G.Color
    Title.TextSize = 17.000
    Title.TextWrapped = true
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local Title2 = Instance.new("TextLabel")
    Title2.Name = "Title"
    Title2.Parent = Main
    Title2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title2.BackgroundTransparency = 1.000
    Title2.Position = UDim2.new(0, 95, 0, 10)
    Title2.Size = UDim2.new(0, 483, 0, 31)
    Title2.Font = Enum.Font.FredokaOne
    Title2.Text = "Hub | By Ryuenz#6264 |Beta Version"
    Title2.TextColor3 = _G.Color
    Title2.TextSize = 17.000
    Title2.TextWrapped = true
    Title2.TextXAlignment = Enum.TextXAlignment.Left

    -- ==========================================
    -- 🔍 GLOBAL SEARCH SYSTEM
    -- ==========================================
    local SearchSystem = {}
    SearchSystem.Database = {}

    local SearchContainer = Instance.new("Frame")
    SearchContainer.Name = "SearchContainer"
    SearchContainer.Parent = Main
    SearchContainer.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    SearchContainer.BackgroundTransparency = 0.3
    SearchContainer.Position = UDim2.new(1, -165, 0, 10)
    SearchContainer.Size = UDim2.new(0, 155, 0, 30)
    SearchContainer.ZIndex = 100

    local SearchCorner = Instance.new("UICorner")
    SearchCorner.CornerRadius = UDim.new(0, 6)
    SearchCorner.Parent = SearchContainer

    local SearchStroke = Instance.new("UIStroke")
    SearchStroke.Thickness = 1.5
    SearchStroke.Color = _G.Color
    SearchStroke.Transparency = 0.5
    SearchStroke.Parent = SearchContainer

    local SearchIcon = Instance.new("ImageLabel")
    SearchIcon.Name = "SearchIcon"
    SearchIcon.Parent = SearchContainer
    SearchIcon.BackgroundTransparency = 1
    SearchIcon.Position = UDim2.new(0, 8, 0.5, -8)
    SearchIcon.Size = UDim2.new(0, 16, 0, 16)
    SearchIcon.Image = "rbxassetid://6034509993"
    SearchIcon.ImageColor3 = _G.Color
    SearchIcon.ZIndex = 101

    local SearchBox = Instance.new("TextBox")
    SearchBox.Name = "SearchBox"
    SearchBox.Parent = SearchContainer
    SearchBox.BackgroundTransparency = 1
    SearchBox.Position = UDim2.new(0, 30, 0, 0)
    SearchBox.Size = UDim2.new(1, -35, 1, 0)
    SearchBox.ZIndex = 101
    SearchBox.Font = Enum.Font.GothamBold
    SearchBox.PlaceholderText = "Search... (Ctrl+F)"
    SearchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    SearchBox.Text = ""
    SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBox.TextSize = 11
    SearchBox.TextXAlignment = Enum.TextXAlignment.Left

    local SearchResults = Instance.new("ScrollingFrame")
    SearchResults.Name = "SearchResults"
    SearchResults.Parent = Main
    SearchResults.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    SearchResults.BorderSizePixel = 0
    SearchResults.Position = UDim2.new(1, -165, 0, 45)
    SearchResults.Size = UDim2.new(0, 155, 0, 0)
    SearchResults.Visible = false
    SearchResults.ZIndex = 105
    SearchResults.ScrollBarThickness = 3
    SearchResults.CanvasSize = UDim2.new(0, 0, 0, 0)
    SearchResults.ScrollBarImageColor3 = _G.Color

    local ResultsCorner = Instance.new("UICorner")
    ResultsCorner.CornerRadius = UDim.new(0, 6)
    ResultsCorner.Parent = SearchResults

    local ResultsStroke = Instance.new("UIStroke")
    ResultsStroke.Thickness = 1.5
    ResultsStroke.Color = _G.Color
    ResultsStroke.Transparency = 0.3
    ResultsStroke.Parent = SearchResults

    local SearchUIList = Instance.new("UIListLayout")
    SearchUIList.Parent = SearchResults
    SearchUIList.SortOrder = Enum.SortOrder.LayoutOrder
    SearchUIList.Padding = UDim.new(0, 3)

    local ResultsPadding = Instance.new("UIPadding")
    ResultsPadding.Parent = SearchResults
    ResultsPadding.PaddingTop = UDim.new(0, 5)
    ResultsPadding.PaddingLeft = UDim.new(0, 5)
    ResultsPadding.PaddingRight = UDim.new(0, 5)
    ResultsPadding.PaddingBottom = UDim.new(0, 5)

    function SearchSystem:AddToDatabase(category, itemName, tabName, sectionName, itemObject)
        table.insert(self.Database, {
            Category = category,
            Name = itemName,
            Tab = tabName,
            Section = sectionName,
            Object = itemObject
        })
    end

    function SearchSystem:PerformSearch(query)
        for _, child in pairs(SearchResults:GetChildren()) do
            if child:IsA("TextButton") or child:IsA("TextLabel") then
                if not child:IsA("UIListLayout") and not child:IsA("UIPadding") then
                    child:Destroy()
                end
            end
        end
        
        if query == "" or #query < 2 then
            SearchResults.Visible = false
            return
        end
        
        query = query:lower()
        local resultsFound = 0
        local maxResults = 15
        
        for _, item in ipairs(self.Database) do
            if resultsFound >= maxResults then break end
            
            local itemName = item.Name:lower()
            local tabName = item.Tab:lower()
            
            if itemName:find(query, 1, true) or tabName:find(query, 1, true) then
                resultsFound = resultsFound + 1
                
                local ResultButton = Instance.new("TextButton")
                ResultButton.Parent = SearchResults
                ResultButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                ResultButton.BorderSizePixel = 0
                ResultButton.Size = UDim2.new(1, -5, 0, 45)
                ResultButton.ZIndex = 106
                ResultButton.Font = Enum.Font.GothamBold
                ResultButton.Text = ""
                ResultButton.AutoButtonColor = false
                
                local ResultCorner = Instance.new("UICorner")
                ResultCorner.CornerRadius = UDim.new(0, 4)
                ResultCorner.Parent = ResultButton
                
                local CategoryIcon = Instance.new("TextLabel")
                CategoryIcon.Parent = ResultButton
                CategoryIcon.BackgroundTransparency = 1
                CategoryIcon.Position = UDim2.new(0, 5, 0, 2)
                CategoryIcon.Size = UDim2.new(0, 20, 0, 12)
                CategoryIcon.ZIndex = 107
                CategoryIcon.Font = Enum.Font.GothamBold
                CategoryIcon.TextColor3 = _G.Color
                CategoryIcon.TextSize = 10
                CategoryIcon.TextXAlignment = Enum.TextXAlignment.Left
                
                local icons = {
                    Toggle = "☑", Button = "🔘", Slider = "🎚",
                    Dropdown = "📋", MultiDropdown = "📋",
                    Textbox = "📝", Label = "📄"
                }
                CategoryIcon.Text = icons[item.Category] or "•"
                
                local CategoryLabel = Instance.new("TextLabel")
                CategoryLabel.Parent = ResultButton
                CategoryLabel.BackgroundTransparency = 1
                CategoryLabel.Position = UDim2.new(0, 25, 0, 2)
                CategoryLabel.Size = UDim2.new(1, -30, 0, 12)
                CategoryLabel.ZIndex = 107
                CategoryLabel.Font = Enum.Font.GothamBold
                CategoryLabel.Text = item.Category
                CategoryLabel.TextColor3 = _G.Color
                CategoryLabel.TextSize = 9
                CategoryLabel.TextXAlignment = Enum.TextXAlignment.Left
                
                local NameLabel = Instance.new("TextLabel")
                NameLabel.Parent = ResultButton
                NameLabel.BackgroundTransparency = 1
                NameLabel.Position = UDim2.new(0, 5, 0, 16)
                NameLabel.Size = UDim2.new(1, -10, 0, 14)
                NameLabel.ZIndex = 107
                NameLabel.Font = Enum.Font.GothamBold
                NameLabel.Text = item.Name
                NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                NameLabel.TextSize = 11
                NameLabel.TextXAlignment = Enum.TextXAlignment.Left
                NameLabel.TextTruncate = Enum.TextTruncate.AtEnd
                
                local PathLabel = Instance.new("TextLabel")
                PathLabel.Parent = ResultButton
                PathLabel.BackgroundTransparency = 1
                PathLabel.Position = UDim2.new(0, 5, 0, 30)
                PathLabel.Size = UDim2.new(1, -10, 0, 12)
                PathLabel.ZIndex = 107
                PathLabel.Font = Enum.Font.Gotham
                PathLabel.Text = "📂 " .. item.Tab .. " > " .. item.Section
                PathLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
                PathLabel.TextSize = 8
                PathLabel.TextXAlignment = Enum.TextXAlignment.Left
                PathLabel.TextTruncate = Enum.TextTruncate.AtEnd
                
                ResultButton.MouseEnter:Connect(function()
                    TweenService:Create(ResultButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
                end)
                
                ResultButton.MouseLeave:Connect(function()
                    TweenService:Create(ResultButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), 
                        {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}):Play()
                end)
                
                ResultButton.MouseButton1Click:Connect(function()
                    SearchSystem:NavigateToItem(item)
                    SearchBox.Text = ""
                    SearchResults.Visible = false
                end)
            end
        end
        
        if resultsFound > 0 then
            local maxHeight = math.min(resultsFound * 50, 280)
            SearchResults.Size = UDim2.new(0, 155, 0, maxHeight)
            SearchResults.Visible = true
            SearchResults.CanvasSize = UDim2.new(0, 0, 0, resultsFound * 50 + 10)
        else
            local NoResults = Instance.new("TextLabel")
            NoResults.Parent = SearchResults
            NoResults.BackgroundTransparency = 1
            NoResults.Size = UDim2.new(1, 0, 0, 50)
            NoResults.ZIndex = 106
            NoResults.Font = Enum.Font.GothamBold
            NoResults.Text = "No results found\n😔"
            NoResults.TextColor3 = Color3.fromRGB(150, 150, 150)
            NoResults.TextSize = 11
            
            SearchResults.Size = UDim2.new(0, 155, 0, 60)
            SearchResults.Visible = true
        end
    end

    function SearchSystem:NavigateToItem(item)
        for _, tab in pairs(TabContainer:GetChildren()) do
            if tab:IsA("TextButton") and tab:FindFirstChild("TextLabel") then
                local tabText = tab.TextLabel.Text:gsub(" ", "")
                if tabText:lower():find(item.Tab:lower(), 1, true) then
                    for _, x in next, TabContainer:GetChildren() do
                        if x.Name == "Tab" then
                            if x.TextLabel then
                                TweenService:Create(x.TextLabel, TweenInfo.new(0), {TextTransparency = 0.2}):Play()
                            end
                            if x.ImageLabel then
                                TweenService:Create(x.ImageLabel, TweenInfo.new(0), {ImageTransparency = 0.2}):Play()
                            end
                            if x.FrameTab then
                                x.FrameTab.Visible = false
                            end
                        end
                    end
                    
                    if tab.TextLabel then
                        TweenService:Create(tab.TextLabel, TweenInfo.new(0), {TextTransparency = 0}):Play()
                    end
                    if tab.ImageLabel then
                        TweenService:Create(tab.ImageLabel, TweenInfo.new(0), {ImageTransparency = 0}):Play()
                    end
                    if tab.FrameTab then
                        tab.FrameTab.Visible = true
                        TweenService:Create(tab.FrameTab, TweenInfo.new(0), {Size = UDim2.new(0, 50, 0, 1)}):Play()
                    end
                    
                    for _, page in pairs(Bottom:GetChildren()) do
                        if page.Name == "Page" then
                            page.Visible = true
                            page.Position = UDim2.new(0,0,0,0)
                        end
                    end
                    
                    break
                end
            end
        end
        
        if item.Object and item.Object.Parent then
            local obj = item.Object
            local originalColor = obj.BackgroundColor3
            
            for i = 1, 3 do
                task.spawn(function()
                    wait(i * 0.3)
                    TweenService:Create(obj, TweenInfo.new(0.2, Enum.EasingStyle.Quad),
                        {BackgroundColor3 = _G.Color}):Play()
                    wait(0.2)
                    TweenService:Create(obj, TweenInfo.new(0.2, Enum.EasingStyle.Quad),
                        {BackgroundColor3 = originalColor}):Play()
                end)
            end
            
            local scrollFrame = obj.Parent
            while scrollFrame and not scrollFrame:IsA("ScrollingFrame") do
                scrollFrame = scrollFrame.Parent
            end
            
            if scrollFrame then
                local itemPosition = obj.AbsolutePosition.Y - scrollFrame.AbsolutePosition.Y
                TweenService:Create(scrollFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                    {CanvasPosition = Vector2.new(0, math.max(0, itemPosition - 50))}):Play()
            end
        end
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "🔍 Search",
            Text = "Found: " .. item.Name,
            Duration = 2,
        })
    end

    SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
        SearchSystem:PerformSearch(SearchBox.Text)
    end)

    SearchBox.Focused:Connect(function()
        TweenService:Create(SearchStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {Transparency = 0, Thickness = 2}):Play()
        TweenService:Create(SearchIcon, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
    end)

    SearchBox.FocusLost:Connect(function()
        TweenService:Create(SearchStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {Transparency = 0.5, Thickness = 1.5}):Play()
        TweenService:Create(SearchIcon, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {ImageColor3 = _G.Color}):Play()
        
        task.wait(0.2)
        if not SearchBox:IsFocused() then
            SearchResults.Visible = false
        end
    end)

    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed then
            if input.KeyCode == Enum.KeyCode.F and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                SearchBox:CaptureFocus()
            elseif input.KeyCode == Enum.KeyCode.Escape and SearchBox:IsFocused() then
                SearchBox:ReleaseFocus()
                SearchBox.Text = ""
                SearchResults.Visible = false
            end
        end
    end)

    -- ==========================================
    -- REST OF UI CODE
    -- ==========================================
    local UiToggle_UiStroke1 = Instance.new("UIStroke")
    UiToggle_UiStroke1.Color = _G.Color
    UiToggle_UiStroke1.Thickness = 1
    UiToggle_UiStroke1.Name = "UiToggle_UiStroke1"
    UiToggle_UiStroke1.Parent = Main

    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = Main

    Top.Name = "Top"
    Top.Parent = Main
    Top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Top.BackgroundTransparency = 1
    Top.Position = UDim2.new(0.021956088, 0, 0, 10)
    Top.Size = UDim2.new(0, 565, 0, 39)

    local ClickFrame = Instance.new("Frame")
    ClickFrame.Name = "Top"
    ClickFrame.Parent = Main
    ClickFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ClickFrame.BackgroundTransparency = 1
    ClickFrame.Position = UDim2.new(0, 0, 0, 0)
    ClickFrame.Size = UDim2.new(0, 600, 0, 35)

    TabHolder.Name = "TabHolder"
    TabHolder.Parent = Top
    TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHolder.Position = UDim2.new(0, 0, 0, 35)
    TabHolder.BackgroundTransparency = 1.000
    TabHolder.Size = UDim2.new(0, 395, 0, 38)

    UICorner_2.Parent = TabHolder

    TabContainer.Name = "TabContainer"
    TabContainer.Parent = TabHolder
    TabContainer.Active = true
    TabContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabContainer.BackgroundTransparency = 1.000
    TabContainer.Size = UDim2.new(0, 560, 0, 38)
    TabContainer.CanvasSize = UDim2.new(2, 0, 0, 0)
    TabContainer.ScrollBarThickness = 1
    TabContainer.VerticalScrollBarInset = Enum.ScrollBarInset.Always

    UIListLayout.Parent = TabContainer
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 10)
    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabContainer.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X, 0, 0)
    end)
    
    UIPadding.Parent = TabContainer
    UIPadding.PaddingTop = UDim.new(0, 5)
    
    local Bottom = Instance.new("Frame")
    Bottom.Name = "Bottom"
    Bottom.Parent = Main
    Bottom.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Bottom.BackgroundTransparency = 1.000
    Bottom.Position = UDim2.new(0.0119760484, 7, 0, 90)
    Bottom.Size = UDim2.new(0, 525, 0, 300)

    local uitoggled = false
    UserInputService.InputBegan:Connect(function(io, p)
        if io.KeyCode == UIConfig.Bind then
            if uitoggled == false then
                Main:TweenSize(UDim2.new(0, 555, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                wait(0.1)
                UI.Enabled = false
                uitoggled = true
            else
                UI.Enabled = true
                Main:TweenSize(UDim2.new(0, 555, 0, 375), Enum.EasingDirection.Out, Enum.EasingStyle.Quart,0.2,true)
                uitoggled = false
            end
        end
    end)

    dragify(ClickFrame, Main)
    local ResizeHandle = Instance.new("Frame")
    ResizeHandle.Name = "ResizeHandle"
    ResizeHandle.Parent = Main
    ResizeHandle.BackgroundColor3 = _G.Color
    ResizeHandle.Size = UDim2.new(0, 15, 0, 15)
    ResizeHandle.Position = UDim2.new(1, -15, 1, -15)
    ResizeHandle.ZIndex = 10
    local logoresize = Instance.new("ImageLabel")
    logoresize.Name = "logoresize"
    logoresize.Parent = ResizeHandle
    logoresize.BackgroundTransparency = 1
    logoresize.Size = UDim2.new(1, 1, 1, 1) 
    logoresize.Image = "rbxassetid://85969905133145"
    local ResizeHandleCorner = Instance.new("UICorner")
    ResizeHandleCorner.CornerRadius = UDim.new(0, 4)
    ResizeHandleCorner.Parent = ResizeHandle

    -- ทำให้สามารถลากเพื่อย้ายได้
    dragify(ClickFrame, Main)

    -- ทำให้สามารถปรับขนาดได้
    MakeResizable(ResizeHandle, Main, Vector2.new(300, 200), Vector2.new(800, 600))
    -- ==========================================
    -- TABS SYSTEM WITH AUTO-REGISTER
    -- ==========================================
    local CurrentTabName = ""
    local CurrentSectionName = ""
    
    local tabs = {}
    local S = false
    
    function tabs:CreateTab(options)
        local Name = options.Name
        CurrentTabName = Name  -- 🔥 บันทึก Tab Name
        
        local FrameTab = Instance.new("Frame")
        local Tab2 = Instance.new("Frame")
        local Tab = Instance.new("TextButton")
        local UICorner_3 = Instance.new("UICorner")
        local UICorner_Tab = Instance.new("UICorner")
        local ImageLabel = Instance.new("ImageLabel")
        local TextLabel = Instance.new("TextLabel")
        local icon = 123

        FrameTab.Name = "FrameTab"
        FrameTab.Parent = Tab
        FrameTab.BackgroundColor3 = _G.Color
        FrameTab.BackgroundTransparency = 0
        FrameTab.Position = UDim2.new(0, 14, 0, 22)
        FrameTab.Size = UDim2.new(0, 0, 0, 1)
        FrameTab.Visible = false

        UICorner_Tab.CornerRadius = UDim.new(0, 3)
        UICorner_Tab.Parent = FrameTab

        Tab.Name = "Tab"
        Tab.Parent = TabContainer
        Tab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        Tab.Size = UDim2.new(0, 80, 0, 20)
        Tab.BackgroundTransparency = 1.00
        Tab.Text = ""
        
        UICorner_3.CornerRadius = UDim.new(0, 3)
        UICorner_3.Parent = Tab

        Tab2.Name = "Tab"
        Tab2.Parent = Tab
        Tab2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        Tab2.Size = UDim2.new(0, 80, 0, 25)
        Tab2.BackgroundTransparency = 1.00

        local UICorner_33 = Instance.new("UICorner")
        UICorner_33.CornerRadius = UDim.new(0, 3)
        UICorner_33.Parent = Tab2

        local UIStroke96 = Instance.new("UIStroke")
        UIStroke96.Thickness = 1.2
        UIStroke96.Parent = Tab2
        UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
        UIStroke96.Color = _G.Color
        UIStroke96.Transparency = 0

        ImageLabel.Parent = Tab
        ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ImageLabel.Position = UDim2.new(0, 5, 0.2, 0)
        ImageLabel.Size = UDim2.new(0, 20, 0, 30)
        ImageLabel.Image = "http://www.roblox.com/asset/?id=" .. icon
        ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
        ImageLabel.ImageTransparency = 0.2
        ImageLabel.BackgroundTransparency = 1

        TextLabel.Parent = Tab
        TextLabel.Text = Name.." "
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.Position = UDim2.new(0, 0, 0, 0)
        TextLabel.Size = UDim2.new(0, 80, 0, 30)
        TextLabel.Font = Enum.Font.GothamBold
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextSize = 12.300
        TextLabel.TextTransparency = 0.200

        if TextLabel.Name == Name.." " then
            Tab.Size = UDim2.new(0, 60 + TextLabel.TextBounds.X, 0, 15)
        end

        local Page = Instance.new("ScrollingFrame")
        local Left = Instance.new("ScrollingFrame")
        local Right = Instance.new("ScrollingFrame")
        local UIListLayout_5 = Instance.new("UIListLayout")
        local UIPadding_5 = Instance.new("UIPadding")

        Page.Name = "Page"
        Page.Parent = Bottom
        Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Page.BackgroundTransparency = 1.000
        Page.Size = UDim2.new(0, 585, 0, 335)
        Page.ScrollBarThickness = 0
        Page.CanvasSize = UDim2.new(0, 0, 0, 0)
        Page.Visible = false

        Left.Name = "Left"
        Left.Parent = Page
        Left.Active = true
        Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Left.BackgroundTransparency = 10
        Left.Size = UDim2.new(0, 274, 0, 335)
        Left.ScrollBarThickness = 0
        Left.CanvasSize = UDim2.new(0, 0, 0, 0)

        Right.Name = "Right"
        Right.Parent = Page
        Right.Active = true
        Right.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Right.BackgroundTransparency = 10
        Right.Size = UDim2.new(0, 274, 0, 335)
        Right.ScrollBarThickness = 0
        Right.CanvasSize = UDim2.new(0, 0, 0, 0)

        local LeftList = Instance.new("UIListLayout")
        local RightList = Instance.new("UIListLayout")

        LeftList.Parent = Left
        LeftList.SortOrder = Enum.SortOrder.LayoutOrder
        LeftList.Padding = UDim.new(0, 5)

        RightList.Parent = Right
        RightList.SortOrder = Enum.SortOrder.LayoutOrder
        RightList.Padding = UDim.new(0, 5)

        UIListLayout_5.Parent = Page
        UIListLayout_5.FillDirection = Enum.FillDirection.Horizontal
        UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_5.Padding = UDim.new(0, 13)

        UIPadding_5.Parent = Page

        if S == false then
            S = true
            Page.Visible = true
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextTransparency = 0
            ImageLabel.ImageTransparency = 0
            ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
            FrameTab.Size = UDim2.new(0, 50, 0, 1)
            FrameTab.Visible = true
        end

        Tab.MouseButton1Click:Connect(function()
            for _, x in next, TabContainer:GetChildren() do
                if x.Name == "Tab" then
                    TweenService:Create(x.TextLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(x.ImageLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(x.ImageLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = 0.2}):Play()
                    TweenService:Create(x.TextLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.2}):Play()
                    TweenService:Create(x.FrameTab, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 0, 0, 1)}):Play()
                    for index, y in next, Bottom:GetChildren() do
                        TweenService:Create(y, TweenInfo.new(0,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
                            {Position = UDim2.new(0,1500,0,0)}):Play()
                    end
                    for index, y in next, Bottom:GetChildren() do
                        y.Visible = false
                    end
                    x.FrameTab.Visible = false
                end
            end
            TweenService:Create(TextLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
            TweenService:Create(ImageLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
            TweenService:Create(ImageLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {ImageTransparency = 0}):Play()
            TweenService:Create(TextLabel, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 0}):Play()
            FrameTab.Visible = true
            TweenService:Create(FrameTab, TweenInfo.new(0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Size = UDim2.new(0, 50, 0, 1)}):Play()
            Page.Position = UDim2.new(0,0,0,1500)
            TweenService:Create(Page, TweenInfo.new(0,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
                {Position = UDim2.new(0,0,0,0)}):Play()
            Page.Visible = true
        end)

        local function GetType(value)
            if value == 1 or value == "Left" then
                return Left
            elseif value == 2 or value == "Right" then
                return Right
            else
                return Left
            end
        end

        game:GetService("RunService").Stepped:Connect(function()
            pcall(function()
                Right.CanvasSize = UDim2.new(0,0,0,RightList.AbsoluteContentSize.Y)
                Left.CanvasSize = UDim2.new(0,0,0,LeftList.AbsoluteContentSize.Y)
            end)
        end)

        -- ==========================================
        -- SECTIONS SYSTEM
        -- ==========================================
        local sections = {}
        
        function sections:CreateSection(options)
            local Name = options.Name
            local side = options.Side
            CurrentSectionName = Name  -- 🔥 บันทึก Section Name

            if side == nil then
                return Left
            end

            local Section = Instance.new("Frame")
            local UICorner_5 = Instance.new("UICorner")
            local Top_2 = Instance.new("Frame")
            local Line = Instance.new("Frame")
            local Sectionname = Instance.new("TextLabel")
            local SectionContainer = Instance.new("Frame")
            local UIListLayout_2 = Instance.new("UIListLayout")
            local UIPadding_2 = Instance.new("UIPadding")

            Section.Name = Name
            Section.Parent = GetType(side)
            Section.BackgroundColor3 = Color3.fromRGB(10, 11, 12)
            Section.ClipsDescendants = true
            Section.Transparency = 0.1
            Section.Size = UDim2.new(1, 0, 0, 40)

            UICorner_5.CornerRadius = UDim.new(0, 5)
            UICorner_5.Parent = Section

            Top_2.Name = "Top"
            Top_2.Parent = Section
            Top_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Top_2.BackgroundTransparency = 1.000
            Top_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
            Top_2.Size = UDim2.new(0, 238, 0, 31)

            Line.Name = "Line"
            Line.Parent = Top_2
            Line.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            Line.BorderSizePixel = 0
            Line.Size = UDim2.new(0, 274, 0, 1)

            Sectionname.Name = "Sectionname"
            Sectionname.Parent = Top_2
            Sectionname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Sectionname.BackgroundTransparency = 1.000
            Sectionname.Position = UDim2.new(0.0591227226, 0, 0.0222222228, 0)
            Sectionname.Size = UDim2.new(0, 224, 0, 24)
            Sectionname.Font = Enum.Font.GothamBold
            Sectionname.Text = Name
            Sectionname.TextColor3 = Color3.fromRGB(255, 255, 255)
            Sectionname.TextSize = 12.000
            Sectionname.TextTransparency = 0
            Sectionname.TextXAlignment = Enum.TextXAlignment.Left

            SectionContainer.Name = "SectionContainer"
            SectionContainer.Parent = Top_2
            SectionContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionContainer.BackgroundTransparency = 1.000
            SectionContainer.BorderSizePixel = 0
            SectionContainer.Position = UDim2.new(0, 0, 0.796416223, 0)
            SectionContainer.Size = UDim2.new(0, 239, 0, 318)

            UIListLayout_2.Parent = SectionContainer
            UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout_2.Padding = UDim.new(0, 10)

            UIPadding_2.Parent = SectionContainer
            UIPadding_2.PaddingLeft = UDim.new(0, 5)

            UIListLayout_2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                Section.Size = UDim2.new(1, 0, 0, UIListLayout_2.AbsoluteContentSize.Y + 35)
            end)

            -- ==========================================
            -- 🔥 FUNCTION ITEMS WITH AUTO-REGISTER
       local functionitem = {}

-- 🔥 Helper Function สำหรับ Register
local function RegisterComponent(category, name, object)
    pcall(function()
        local cleanName = name:gsub("\n.*", ""):gsub("\\n.*", "")
        SearchSystem:AddToDatabase(
            category,
            cleanName,
            CurrentTabName,
            CurrentSectionName,
            object
        )
    end)
end

local function ParseArguments(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
    if type(arg1) == "table" then
        return arg1
    else
        -- รูปแบบแยกพารามิเตอร์ตามประเภทของ component
        if arg1 and arg2 and arg3 and arg4 and arg5 and arg6 then
            -- Slider
            return {
                Name = arg1,
                Min = arg2,
                Max = arg3,
                Value = arg4,
                floor = arg5,
                Callback = arg6,
                Flag = arg7
            }
        elseif arg1 and arg2 and arg3 and arg4 then
            -- Toggle, Textbox, MultiDropdown
            return {
                Name = arg1,
                Value = arg2,
                Callback = arg3,
                Flag = arg4
            }
        elseif arg1 and arg2 and arg3 then
            -- Dropdown, ButtonTog
            return {
                Name = arg1,
                Value = arg2,
                List = arg2, -- สำหรับ Dropdown
                Callback = arg3
            }
        elseif arg1 and arg2 then
            -- Button
            return {
                Name = arg1,
                Callback = arg2
            }
        else
            -- Label
            return {
                Name = arg1
            }
        end
    end
end

-- ==========================================
-- 🔥 Toggle Function
-- ==========================================
function functionitem:Toggle(arg1, arg2, arg3, arg4)
    local options = ParseArguments(arg1, arg2, arg3, arg4)
    local Name = options.Name
    local default = options.Value
    local callback = options.Callback or function() end
    local Flag = options.Flag

    if not Name or Name == "" then
        warn("Toggle: Name is required!")
        return
    end

    local ToglFunc = {}
    local Tgo = default or false
    local MainToggle = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Text = Instance.new("TextLabel")
    local MainToggle_3 = Instance.new("ImageLabel")
    local UICorner_3 = Instance.new("UICorner")
    local TextButton = Instance.new("TextButton")

    MainToggle.Name = Name
    MainToggle.Parent = SectionContainer
    MainToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MainToggle.BackgroundTransparency = 1
    MainToggle.BorderSizePixel = 0
    MainToggle.ClipsDescendants = true
    MainToggle.Size = UDim2.new(0, 265, 0, 45)
    MainToggle.ZIndex = 16

    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = MainToggle

    Text.Name = "Text"
    Text.Parent = MainToggle
    Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text.BackgroundTransparency = 1.000
    Text.Position = UDim2.new(0, 45, 0, 16)
    Text.Size = UDim2.new(0, 100, 0, 12)
    Text.ZIndex = 16
    Text.Font = Enum.Font.GothamBold
    Text.Text = Name
    Text.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text.TextSize = 14.000
    Text.TextTransparency = 0.2
    Text.TextXAlignment = Enum.TextXAlignment.Left

    MainToggle_3.Name = "MainToggle"
    MainToggle_3.Parent = MainToggle
    MainToggle_3.AnchorPoint = Vector2.new(0.5, 0.5)
    MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainToggle_3.ClipsDescendants = true
    MainToggle_3.Position = UDim2.new(0, 15, 0.5, 0)
    MainToggle_3.Size = UDim2.new(0, 25, 0, 25)
    MainToggle_3.ZIndex = 16
    MainToggle_3.Image = "http://www.roblox.com/asset/?id="
    MainToggle_3.ImageColor3 = Color3.fromRGB(255, 255, 255)
    MainToggle_3.Visible = true

    UICorner_3.CornerRadius = UDim.new(0, 5)
    UICorner_3.Parent = MainToggle_3

    TextButton.Name = ""
    TextButton.Parent = MainToggle
    TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.BackgroundTransparency = 1.000
    TextButton.BorderSizePixel = 0
    TextButton.Position = UDim2.new(0, 0, 0, 0)
    TextButton.Size = UDim2.new(0, 265, 0, 35)
    TextButton.ZIndex = 16
    TextButton.AutoButtonColor = false
    TextButton.Font = Enum.Font.Gotham
    TextButton.Text = ""
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextSize = 14.000

    if default == true then
        MainToggle_3.BackgroundColor3 = _G.Color
        MainToggle_3:TweenSize(UDim2.new(0, 28, 0, 28),"In","Linear",0.2,true)
        MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
        UICorner_3.CornerRadius = UDim.new(0, 100)
        pcall(callback,true)
    end

    TextButton.MouseEnter:Connect(function()
        if Tgo == false then
            MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=00"
            MainToggle_3:TweenSize(UDim2.new(0, 28, 0, 28),"In","Linear",0.2,true)
            UICorner_3.CornerRadius = UDim.new(0, 5)
        else
            MainToggle_3.BackgroundColor3 = _G.Color
            MainToggle_3:TweenSize(UDim2.new(0, 28, 0, 28),"In","Linear",0.2,true)
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
            UICorner_3.CornerRadius = UDim.new(0, 100)
        end
    end)

    TextButton.MouseLeave:Connect(function()
        if Tgo == false then
            MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=00"
            MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25),"In","Linear",0.2,true)
            UICorner_3.CornerRadius = UDim.new(0, 5)
        else
            MainToggle_3.BackgroundColor3 = _G.Color
            MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25),"In","Linear",0.2,true)
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
            UICorner_3.CornerRadius = UDim.new(0, 100)
        end
    end)

    TextButton.MouseButton1Click:Connect(function()
        local SoundClick = Instance.new("Sound")
        SoundClick.Name = "SoundEffect"
        SoundClick.SoundId = "rbxassetid://130785805"
        SoundClick.Volume = 1
        SoundClick.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
        SoundClick:Play()
        if Tgo == false then
            Tgo = true
            pcall(callback,true)
            MainToggle_3.BackgroundColor3 = _G.Color
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
            UICorner_3.CornerRadius = UDim.new(0, 100)
            MainToggle_3:TweenSize(UDim2.new(0, 29, 0, 29),"In","Linear",0.2,true)
            wait(0.2)
            MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25),"In","Linear",0.2,true)
        else
            Tgo = false
            pcall(callback,false)
            MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            MainToggle_3.Image = "http://www.roblox.com/asset/?id=00"
            MainToggle_3:TweenSize(UDim2.new(0, 29, 0, 29),"In","Linear",0.2,true)
            UICorner_3.CornerRadius = UDim.new(0, 5)
            wait(0.2)
            MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25),"In","Linear",0.2,true)
        end
        wait(0.1)
        CircleClick(TextButton, Mouse.X, Mouse.Y)
        SoundClick:Destroy()
    end)

    -- 🔥 Register to Search
    RegisterComponent("Toggle", Name, MainToggle)
    
    return ToglFunc
end

-- ==========================================
-- 🔥 Button Function
-- ==========================================
function functionitem:Button(arg1, arg2)
    local options = ParseArguments(arg1, arg2)
    local Name = options.Name or "Button"
    local callback = options.Callback or function() end

    local Button = Instance.new("Frame")
    local UICorner_6 = Instance.new("UICorner")
    local TextLabel_3 = Instance.new("TextLabel")
    local TextButton = Instance.new("TextButton")

    Button.Name = "Button"
    Button.Parent = SectionContainer
    Button.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Button.Size = UDim2.new(0, 265, 0, 30)
    Button.ZIndex = 16

    UICorner_6.CornerRadius = UDim.new(0, 4)
    UICorner_6.Parent = Button

    TextLabel_3.Name = "Text"
    TextLabel_3.Parent = Button
    TextLabel_3.AnchorPoint = Vector2.new(0.5, 0.5)
    TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_3.BackgroundTransparency = 1.000
    TextLabel_3.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextLabel_3.Size = UDim2.new(0, 100, 0, 12)
    TextLabel_3.ZIndex = 16
    TextLabel_3.Font = Enum.Font.GothamBold
    TextLabel_3.Text = Name
    TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_3.TextSize = 12.000
    TextLabel_3.TextTransparency = 0

    TextButton.Parent = Button
    TextButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TextButton.BackgroundTransparency = 1.000
    TextButton.BorderSizePixel = 0
    TextButton.ClipsDescendants = true
    TextButton.Size = UDim2.new(1, 0, 1, 0)
    TextButton.ZIndex = 16
    TextButton.AutoButtonColor = false
    TextButton.Font = Enum.Font.Gotham
    TextButton.Text = ""
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextSize = 14.000
    
    TextButton.MouseEnter:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.5}):Play()
    end)

    TextButton.MouseLeave:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0}):Play()
    end)

    TextButton.MouseButton1Click:Connect(function()
        CircleClick(Button, Mouse.X, Mouse.Y)
        TextLabel_3.TextSize = 0
        TweenService:Create(TextLabel_3, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {TextSize = 12}):Play()
        callback()
    end)

    -- 🔥 Register to Search
    RegisterComponent("Button", Name, Button)
    
    return
end

-- ==========================================
-- 🔥 Label Function
-- ==========================================
function functionitem:Label(arg1)
    local options = ParseArguments(arg1)
    local text = options.Name

    local textas = {}
    local Label = Instance.new("Frame")
    local Text = Instance.new("TextLabel")
    
    Label.Name = text
    Label.Parent = SectionContainer
    Label.AnchorPoint = Vector2.new(0.5, 0.5)
    Label.BackgroundTransparency = 1.000
    Label.Size = UDim2.new(0, 265, 0, 30)

    Text.Name = "Text"
    Text.Parent = Label
    Text.AnchorPoint = Vector2.new(0.5, 0.5)
    Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text.BackgroundTransparency = 1.000
    Text.Position = UDim2.new(0.5, 0, 0.5, 0)
    Text.Size = UDim2.new(0, 53, 0, 12)
    Text.ZIndex = 16
    Text.Font = Enum.Font.GothamBold
    Text.Text = text
    Text.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text.TextSize = 12.000
    
    function textas:Set(newtext)
        Text.Text = newtext
    end

    -- 🔥 Register to Search
    RegisterComponent("Label", text, Label)
    
    return textas
end

-- ==========================================
-- 🔥 LabelLog Function
-- ==========================================
function functionitem:LabelLog(arg1)
    local options = ParseArguments(arg1)
    local text = options.Name

    local textas = {}
    local Label = Instance.new("Frame")
    local Text = Instance.new("TextLabel")
    Label.Name = text
    Label.Parent = SectionContainer
    Label.AnchorPoint = Vector2.new(0.5, 0.5)
    Label.BackgroundTransparency = 1.000
    Label.Size = UDim2.new(0, 265, 0, 30)

    Text.Name = "Text"
    Text.Parent = Label
    Text.AnchorPoint = Vector2.new(0.5, 0.5)
    Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text.BackgroundTransparency = 1.000
    Text.Position = UDim2.new(0.5, 0, 0.5, 0)
    Text.Size = UDim2.new(0, 53, 0, 12)
    Text.ZIndex = 16
    Text.Font = Enum.Font.GothamBold
    Text.Text = text
    Text.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text.TextSize = 12.000
    
    function textas:Refresh(newtext)
        Text.Text = newtext
    end
    
    function textas:Color(Color)
        Text.TextColor3 = Color
    end
    
    return textas
end

-- ==========================================
-- 🔥 ButtonTog Function
-- ==========================================
function functionitem:ButtonTog(arg1, arg2, arg3)
    local options = ParseArguments(arg1, arg2, arg3)
    local Title = options.Name
    local default = options.Value
    local callback = options.Callback or function() end

    local b3Func = {}
    local Tgs = default
    local Button_2 = Instance.new("Frame")
    local UICorner_21 = Instance.new("UICorner")
    local TextLabel_4 = Instance.new("TextLabel")
    local TextButton_4 = Instance.new("TextButton")

    Button_2.Name = Title
    Button_2.Parent = SectionContainer
    Button_2.BackgroundColor3 = default and Color3.fromRGB(33, 132, 112) or _G.Color
    Button_2.Size = UDim2.new(0, 265, 0, 30)
    Button_2.ZIndex = 16

    UICorner_21.CornerRadius = UDim.new(0, 4)
    UICorner_21.Parent = Button_2

    TextLabel_4.Parent = Button_2
    TextLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
    TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_4.BackgroundTransparency = 1.000
    TextLabel_4.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextLabel_4.Size = UDim2.new(0, 40, 0, 12)
    TextLabel_4.ZIndex = 16
    TextLabel_4.Font = Enum.Font.GothamBold
    TextLabel_4.Text = tostring(Title)
    TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_4.TextSize = 12.000

    TextButton_4.Parent = Button_2
    TextButton_4.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TextButton_4.BackgroundTransparency = 1.000
    TextButton_4.BorderSizePixel = 0
    TextButton_4.ClipsDescendants = true
    TextButton_4.Size = UDim2.new(1, 0, 1, 0)
    TextButton_4.ZIndex = 16
    TextButton_4.AutoButtonColor = false
    TextButton_4.Font = Enum.Font.Gotham
    TextButton_4.Text = ""
    TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_4.TextSize = 14.000

    TextButton_4.MouseButton1Click:Connect(function()
        Tgs = not Tgs
        b3Func:Update(Tgs)
        CircleClick(Button_2, Mouse.X, Mouse.Y)
    end)

    if default then
        TweenService:Create(
            Button_2,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = Color3.fromRGB(33, 132, 112)}
        ):Play()
        callback(default)
        Tgs = default
    end

    function b3Func:Update(state)
        TweenService:Create(
            Button_2,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = state and Color3.fromRGB(33, 132, 112) or _G.Color}
        ):Play()
        callback(state)
        Tgs = state
    end

    -- 🔥 Register to Search
    RegisterComponent("ButtonTog", Title, Button_2)
    
    return b3Func
end

-- ==========================================
-- 🔥 Textbox Function
-- ==========================================
function functionitem:Textbox(arg1, arg2, arg3, arg4)
    local options = ParseArguments(arg1, arg2, arg3, arg4)
    local Name = options.Name
    local Placeholder = options.Value or ""
    local callback = options.Callback or function() end
    local Flag = options.Flag

    local Textbox = Instance.new("Frame")
    local UICorner_16 = Instance.new("UICorner")
    local Text_5 = Instance.new("TextLabel")
    local TextboxHoler = Instance.new("Frame")
    local UICorner_17 = Instance.new("UICorner")
    local HeadTitle = Instance.new("TextBox")

    Textbox.Name = Name
    Textbox.Parent = SectionContainer
    Textbox.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
    Textbox.BackgroundTransparency = 0.700
    Textbox.BorderSizePixel = 0
    Textbox.ClipsDescendants = true
    Textbox.Size = UDim2.new(0, 265, 0, 60)
    Textbox.ZIndex = 16

    local UIStroke96 = Instance.new("UIStroke")
    UIStroke96.Thickness = 1.2
    UIStroke96.Parent = Textbox
    UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke96.Color = _G.Color
    UIStroke96.Transparency = 1

    Textbox.MouseEnter:Connect(function()
        TweenService:Create(
            UIStroke96,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.10}
        ):Play()
    end)

    Textbox.MouseLeave:Connect(function()
        TweenService:Create(
            UIStroke96,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 1}
        ):Play()
    end)

    UICorner_16.CornerRadius = UDim.new(0, 4)
    UICorner_16.Parent = Textbox

    Text_5.Name = "Text"
    Text_5.Parent = Textbox
    Text_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text_5.BackgroundTransparency = 1.000
    Text_5.Position = UDim2.new(0, 10, 0, 10)
    Text_5.Size = UDim2.new(0, 43, 0, 12)
    Text_5.ZIndex = 16
    Text_5.Font = Enum.Font.GothamBold
    Text_5.Text = Name
    Text_5.TextColor3 = _G.Color
    Text_5.TextSize = 11.000
    Text_5.TextXAlignment = Enum.TextXAlignment.Left

    TextboxHoler.Name = "TextboxHoler"
    TextboxHoler.Parent = Textbox
    TextboxHoler.AnchorPoint = Vector2.new(0.5, 0.5)
    TextboxHoler.BackgroundColor3 = Color3.fromRGB(13, 13, 15)
    TextboxHoler.BackgroundTransparency = 1.000
    TextboxHoler.BorderSizePixel = 0
    TextboxHoler.Position = UDim2.new(0.5, 0, 0.5, 13)
    TextboxHoler.Size = UDim2.new(0.970000029, 0, 0, 30)

    UICorner_17.CornerRadius = UDim.new(0, 8)
    UICorner_17.Parent = TextboxHoler

    HeadTitle.Name = "HeadTitle"
    HeadTitle.Parent = TextboxHoler
    HeadTitle.AnchorPoint = Vector2.new(0.5, 0.5)
    HeadTitle.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
    HeadTitle.BackgroundTransparency = 1.000
    HeadTitle.BorderSizePixel = 0
    HeadTitle.ClipsDescendants = true
    HeadTitle.Position = UDim2.new(0.5, 3, 0.5, 0)
    HeadTitle.Size = UDim2.new(0.949999988, 0, 0, 25)
    HeadTitle.ZIndex = 16
    HeadTitle.Font = Enum.Font.GothamBold
    HeadTitle.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
    HeadTitle.PlaceholderText = Placeholder
    HeadTitle.Text = ""
    HeadTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    HeadTitle.TextSize = 13.000
    HeadTitle.TextXAlignment = Enum.TextXAlignment.Center

    local ButtonColor44 = Instance.new("UIStroke")
    ButtonColor44.Thickness = 0.9
    ButtonColor44.Name = ""
    ButtonColor44.Parent = HeadTitle
    ButtonColor44.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    ButtonColor44.LineJoinMode = Enum.LineJoinMode.Round
    ButtonColor44.Color = _G.Color
    ButtonColor44.Transparency = 0.2

    Textbox.MouseEnter:Connect(function()
        TweenService:Create(
            ButtonColor44,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Thickness = 1}
        ):Play()
        TweenService:Create(
            ButtonColor44,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.5}
        ):Play()
    end)

    Textbox.MouseLeave:Connect(function()
        TweenService:Create(
            ButtonColor44,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Thickness = 0.9}
        ):Play()
        TweenService:Create(
            ButtonColor44,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.2}
        ):Play()
    end)

    HeadTitle.FocusLost:Connect(function(ep)
        if ep then
            if #HeadTitle.Text > 0 then
                callback(HeadTitle.Text)
                HeadTitle.Text = HeadTitle.Text
            end
        end
    end)

    -- 🔥 Register to Search
    RegisterComponent("Textbox", Name, Textbox)
    
    return
end

-- ==========================================
-- 🔥 Dropdown Function
-- ==========================================
function functionitem:Dropdown(arg1, arg2, arg3, arg4, arg5)
    local options = ParseArguments(arg1, arg2, arg3, arg4, arg5)
    local text = options.Name
    local default = options.Value or ""
    local list = options.List or {}
    local callback = options.Callback or function() end
    local Flag = options.Flag

    local Dropfunc = {}
    local filteredItems = {}

    local MainDropDown = Instance.new("Frame")
    local UICorner_7 = Instance.new("UICorner")
    local MainDropDown_2 = Instance.new("Frame")
    local UICorner_8 = Instance.new("UICorner")
    local v = Instance.new("TextButton")
    local Text_2 = Instance.new("TextLabel")
    local ImageButton = Instance.new("ImageButton")
    local SearchBox = Instance.new("TextBox")
    local SearchBoxCorner = Instance.new("UICorner")
    local Scroll_Items = Instance.new("ScrollingFrame")
    local UIListLayout_3 = Instance.new("UIListLayout")
    local UIPadding_3 = Instance.new("UIPadding")

    MainDropDown.Name = text
    MainDropDown.Parent = SectionContainer
    MainDropDown.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainDropDown.BackgroundTransparency = 0.700
    MainDropDown.BorderSizePixel = 0
    MainDropDown.ClipsDescendants = true
    MainDropDown.Size = UDim2.new(0, 265, 0, 35)
    MainDropDown.ZIndex = 16

    local UIStroke96 = Instance.new("UIStroke")
    UIStroke96.Thickness = 1.2
    UIStroke96.Parent = MainDropDown
    UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke96.Color = _G.Color
    UIStroke96.Transparency = 1

    MainDropDown.MouseEnter:Connect(function()
        TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Transparency = 0.10}):Play()
    end)

    MainDropDown.MouseLeave:Connect(function()
        TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Transparency = 1}):Play()
    end)

    UICorner_7.CornerRadius = UDim.new(0, 4)
    UICorner_7.Parent = MainDropDown

    MainDropDown_2.Name = "MainDropDown"
    MainDropDown_2.Parent = MainDropDown
    MainDropDown_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainDropDown_2.BackgroundTransparency = 0.700
    MainDropDown_2.BorderSizePixel = 0
    MainDropDown_2.ClipsDescendants = true
    MainDropDown_2.Size = UDim2.new(1, 0, 0, 35)
    MainDropDown_2.ZIndex = 16

    UICorner_8.CornerRadius = UDim.new(0, 4)
    UICorner_8.Parent = MainDropDown_2

    v.Name = "v"
    v.Parent = MainDropDown_2
    v.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    v.BackgroundTransparency = 1.000
    v.BorderSizePixel = 0
    v.Size = UDim2.new(1, 0, 1, 0)
    v.ZIndex = 16
    v.AutoButtonColor = false
    v.Font = Enum.Font.GothamBold
    v.Text = ""
    v.TextColor3 = Color3.fromRGB(255, 255, 255)
    v.TextSize = 12.000

    Text_2.Name = "Text"
    Text_2.Parent = MainDropDown
    Text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text_2.BackgroundTransparency = 1.000
    Text_2.Size = UDim2.new(0, 265, 0, 35)
    Text_2.ZIndex = 16
    Text_2.Font = Enum.Font.GothamBold
    Text_2.Text = default
    Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text_2.TextSize = 13.000
    Text_2.TextXAlignment = Enum.TextXAlignment.Center

    ImageButton.Parent = MainDropDown_2
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BackgroundTransparency = 1
    ImageButton.Position = UDim2.new(0, 235, 0, 10)
    ImageButton.Size = UDim2.new(0, 13, 0, 13)
    ImageButton.ZIndex = 16
    ImageButton.Image = "http://www.roblox.com/asset/?id=6282522798"

    SearchBox.Name = "SearchBox"
    SearchBox.Parent = MainDropDown
    SearchBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    SearchBox.Position = UDim2.new(0, 10, 0, 40)
    SearchBox.Size = UDim2.new(0, 245, 0, 30)
    SearchBox.ZIndex = 17
    SearchBox.Font = Enum.Font.GothamBold
    SearchBox.PlaceholderText = "🔍 Search..."
    SearchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    SearchBox.Text = ""
    SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBox.TextSize = 12.000
    SearchBox.TextXAlignment = Enum.TextXAlignment.Left
    SearchBox.Visible = false

    local SearchPadding = Instance.new("UIPadding")
    SearchPadding.Parent = SearchBox
    SearchPadding.PaddingLeft = UDim.new(0, 10)

    SearchBoxCorner.CornerRadius = UDim.new(0, 4)
    SearchBoxCorner.Parent = SearchBox

    local SearchStroke = Instance.new("UIStroke")
    SearchStroke.Thickness = 1
    SearchStroke.Parent = SearchBox
    SearchStroke.Color = _G.Color
    SearchStroke.Transparency = 0.5

    Scroll_Items.Name = "Scroll_Items"
    Scroll_Items.Parent = MainDropDown
    Scroll_Items.Active = true
    Scroll_Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Scroll_Items.BackgroundTransparency = 1.000
    Scroll_Items.BorderSizePixel = 0
    Scroll_Items.Position = UDim2.new(0, 0, 0, 75)
    Scroll_Items.Size = UDim2.new(1, 0, 0, 224)
    Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, 0)
    Scroll_Items.ScrollBarThickness = 2
    Scroll_Items.Visible = false

    UIListLayout_3.Parent = Scroll_Items
    UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout_3.Padding = UDim.new(0, 5)
    UIListLayout_3:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_3.AbsoluteContentSize.Y + 10)
    end)

    UIPadding_3.Parent = Scroll_Items
    UIPadding_3.PaddingLeft = UDim.new(0, 10)
    UIPadding_3.PaddingTop = UDim.new(0, 5)

    function Dropfunc:TogglePanel(state)
        TweenService:Create(MainDropDown, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = state and UDim2.new(0, 265, 0, 340) or UDim2.new(0, 265, 0, 35)}):Play()
        TweenService:Create(ImageButton, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Rotation = state and 180 or 0}):Play()
        
        SearchBox.Visible = state
        Scroll_Items.Visible = state
        
        if state then
            SearchBox:CaptureFocus()
        else
            SearchBox.Text = ""
            Dropfunc:FilterItems("")
        end
    end

    local Tof = false
    ImageButton.MouseButton1Click:Connect(function()
        Tof = not Tof
        Dropfunc:TogglePanel(Tof)
    end)

    v.MouseButton1Click:Connect(function()
        Tof = not Tof
        Dropfunc:TogglePanel(Tof)
    end)

    function Dropfunc:FilterItems(query)
        query = query:lower()
        
        for _, item in pairs(Scroll_Items:GetChildren()) do
            if item:IsA("TextButton") then
                local itemText = item.Text:lower()
                if query == "" or itemText:find(query, 1, true) then
                    item.Visible = true
                else
                    item.Visible = false
                end
            end
        end
    end

    SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
        Dropfunc:FilterItems(SearchBox.Text)
    end)

    function Dropfunc:Clear()
        for i, v in next, Scroll_Items:GetChildren() do
            if v:IsA("TextButton") then
                v:Destroy()
            end
        end
    end

    function Dropfunc:Add(Text)
        local _5 = Instance.new("TextButton")
        local UICorner_9 = Instance.new("UICorner")
        
        _5.Name = Text
        _5.Parent = Scroll_Items
        _5.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        _5.BorderSizePixel = 0
        _5.ClipsDescendants = true
        _5.Size = UDim2.new(1, -10, 0, 30)
        _5.ZIndex = 17
        _5.AutoButtonColor = false
        _5.Font = Enum.Font.GothamBold
        _5.Text = Text
        _5.TextColor3 = Color3.fromRGB(255, 255, 255)
        _5.TextSize = 12.000
        
        UICorner_9.CornerRadius = UDim.new(0, 4)
        UICorner_9.Parent = _5
        
        local UIStroke96 = Instance.new("UIStroke")
        UIStroke96.Thickness = 1.2
        UIStroke96.Parent = _5
        UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
        UIStroke96.Color = _G.Color
        UIStroke96.Transparency = 1
        
        if Text == default then
            TweenService:Create(_5, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextColor3 = Color3.fromRGB(0, 200, 200)}):Play()
        end
        
        _5.MouseEnter:Connect(function()
            TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Transparency = 0.10}):Play()
        end)
        
        _5.MouseLeave:Connect(function()
            TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Transparency = 1}):Play()
        end)
        
        _5.MouseButton1Click:Connect(function()
            Tof = false
            Dropfunc:TogglePanel(Tof)
            callback(Text)
            Text_2.Text = Text
            
            for i, v in pairs(Scroll_Items:GetChildren()) do
                if v:IsA("TextButton") and v.TextColor3 == Color3.fromRGB(0, 200, 200) then
                    TweenService:Create(v, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                end
            end
            
            TweenService:Create(_5, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextColor3 = Color3.fromRGB(0, 200, 200)}):Play()
        end)
    end

    for i, v in next, list do
        Dropfunc:Add(v)
    end
    
    RegisterComponent("Dropdown", text, MainDropDown)
    
    return Dropfunc
end

-- ==========================================
-- 🔥 MultiDropdown Function
-- ==========================================
function functionitem:MultiDropdown(arg1, arg2, arg3, arg4, arg5)
    local options = ParseArguments(arg1, arg2, arg3, arg4, arg5)
    local text = options.Name
    local default = options.Value or {}
    local list = options.List or {}
    local callback = options.Callback or function() end
    local Flag = options.Flag

    local Dropfunc = {}
    local DropTable = {}

    if default then
        for _, v in ipairs(default) do
            table.insert(DropTable, v)
        end
    end

    local MainDropDown = Instance.new("Frame")
    local UICorner_7 = Instance.new("UICorner")
    local MainDropDown_2 = Instance.new("Frame")
    local UICorner_8 = Instance.new("UICorner")
    local v = Instance.new("TextButton")
    local Text_2 = Instance.new("TextLabel")
    local ImageButton = Instance.new("ImageButton")
    local SearchBox = Instance.new("TextBox")
    local SearchBoxCorner = Instance.new("UICorner")
    local Scroll_Items = Instance.new("ScrollingFrame")
    local UIListLayout_3 = Instance.new("UIListLayout")
    local UIPadding_3 = Instance.new("UIPadding")

    MainDropDown.Name = text
    MainDropDown.Parent = SectionContainer
    MainDropDown.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainDropDown.BackgroundTransparency = 0.700
    MainDropDown.BorderSizePixel = 0
    MainDropDown.ClipsDescendants = true
    MainDropDown.Size = UDim2.new(0, 265, 0, 35)
    MainDropDown.ZIndex = 16

    local UIStroke96 = Instance.new("UIStroke")
    UIStroke96.Thickness = 1.2
    UIStroke96.Parent = MainDropDown
    UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke96.Color = _G.Color
    UIStroke96.Transparency = 1

    MainDropDown.MouseEnter:Connect(function()
        TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Transparency = 0.10}):Play()
    end)

    MainDropDown.MouseLeave:Connect(function()
        TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Transparency = 1}):Play()
    end)

    UICorner_7.CornerRadius = UDim.new(0, 4)
    UICorner_7.Parent = MainDropDown

    MainDropDown_2.Name = "MainDropDown"
    MainDropDown_2.Parent = MainDropDown
    MainDropDown_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainDropDown_2.BackgroundTransparency = 0.700
    MainDropDown_2.BorderSizePixel = 0
    MainDropDown_2.ClipsDescendants = true
    MainDropDown_2.Size = UDim2.new(1, 0, 0, 35)
    MainDropDown_2.ZIndex = 16

    UICorner_8.CornerRadius = UDim.new(0, 4)
    UICorner_8.Parent = MainDropDown_2

    v.Name = "v"
    v.Parent = MainDropDown_2
    v.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    v.BackgroundTransparency = 1.000
    v.BorderSizePixel = 0
    v.Size = UDim2.new(1, 0, 1, 0)
    v.ZIndex = 16
    v.AutoButtonColor = false
    v.Font = Enum.Font.GothamBold
    v.Text = ""
    v.TextColor3 = Color3.fromRGB(255, 255, 255)
    v.TextSize = 12.000

    Text_2.Name = "Text"
    Text_2.Parent = MainDropDown_2
    Text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Text_2.BackgroundTransparency = 1.000
    Text_2.Size = UDim2.new(0, 265, 0, 35)
    Text_2.ZIndex = 16
    Text_2.Font = Enum.Font.GothamBold
    Text_2.Text = table.concat(DropTable, ", ")
    Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text_2.TextSize = 13.000
    Text_2.TextXAlignment = Enum.TextXAlignment.Center

    ImageButton.Parent = MainDropDown_2
    ImageButton.AnchorPoint = Vector2.new(0, 0.5)
    ImageButton.BackgroundTransparency = 1.000
    ImageButton.Position = UDim2.new(1, -25, 0.5, 0)
    ImageButton.Size = UDim2.new(0, 12, 0, 12)
    ImageButton.ZIndex = 16
    ImageButton.Image = "http://www.roblox.com/asset/?id=6282522798"

    SearchBox.Name = "SearchBox"
    SearchBox.Parent = MainDropDown
    SearchBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    SearchBox.Position = UDim2.new(0, 10, 0, 40)
    SearchBox.Size = UDim2.new(0, 245, 0, 30)
    SearchBox.ZIndex = 17
    SearchBox.Font = Enum.Font.GothamBold
    SearchBox.PlaceholderText = "🔍 Search items..."
    SearchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    SearchBox.Text = ""
    SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBox.TextSize = 12.000
    SearchBox.TextXAlignment = Enum.TextXAlignment.Left
    SearchBox.Visible = false

    local SearchPadding = Instance.new("UIPadding")
    SearchPadding.Parent = SearchBox
    SearchPadding.PaddingLeft = UDim.new(0, 10)

    SearchBoxCorner.CornerRadius = UDim.new(0, 4)
    SearchBoxCorner.Parent = SearchBox

    local SearchStroke = Instance.new("UIStroke")
    SearchStroke.Thickness = 1
    SearchStroke.Parent = SearchBox
    SearchStroke.Color = _G.Color
    SearchStroke.Transparency = 0.5

    Scroll_Items.Name = "Scroll_Items"
    Scroll_Items.Parent = MainDropDown
    Scroll_Items.Active = true
    Scroll_Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Scroll_Items.BackgroundTransparency = 1.000
    Scroll_Items.BorderSizePixel = 0
    Scroll_Items.Position = UDim2.new(0, 0, 0, 75)
    Scroll_Items.Size = UDim2.new(1, 0, 0, 125)
    Scroll_Items.ZIndex = 16
    Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, 0)
    Scroll_Items.ScrollBarThickness = 2
    Scroll_Items.Visible = false

    UIListLayout_3.Parent = Scroll_Items
    UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout_3.Padding = UDim.new(0, 5)
    UIListLayout_3:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_3.AbsoluteContentSize.Y + 10)
    end)

    UIPadding_3.Parent = Scroll_Items
    UIPadding_3.PaddingLeft = UDim.new(0, 10)
    UIPadding_3.PaddingTop = UDim.new(0, 5)

    function Dropfunc:TogglePanel(state)
        TweenService:Create(MainDropDown, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = state and UDim2.new(0, 265, 0, 240) or UDim2.new(0, 265, 0, 35)}):Play()
        TweenService:Create(ImageButton, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Rotation = state and 180 or 0}):Play()
        
        SearchBox.Visible = state
        Scroll_Items.Visible = state
        
        if state then
            task.wait(0.1)
            SearchBox:CaptureFocus()
        else
            SearchBox.Text = ""
            Dropfunc:FilterItems("")
        end
    end

    local Tof = false
    ImageButton.MouseButton1Click:Connect(function()
        Tof = not Tof
        Dropfunc:TogglePanel(Tof)
    end)

    v.MouseButton1Click:Connect(function()
        Tof = not Tof
        Dropfunc:TogglePanel(Tof)
    end)

    function Dropfunc:FilterItems(query)
        query = query:lower()
        
        for _, item in pairs(Scroll_Items:GetChildren()) do
            if item:IsA("TextButton") then
                local itemText = item.Text:lower()
                if query == "" or itemText:find(query, 1, true) then
                    item.Visible = true
                else
                    item.Visible = false
                end
            end
        end
    end

    SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
        Dropfunc:FilterItems(SearchBox.Text)
    end)

    function Dropfunc:Clear()
        for i, v in next, Scroll_Items:GetChildren() do
            if v:IsA("TextButton") then
                v:Destroy()
            end
        end
        DropTable = {}
        Text_2.Text = ""
    end

    function Dropfunc:Add(Text)
        local _5 = Instance.new("TextButton")
        local UICorner_9 = Instance.new("UICorner")
        
        _5.Name = Text
        _5.Parent = Scroll_Items
        _5.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        _5.BorderSizePixel = 0
        _5.ClipsDescendants = true
        _5.Size = UDim2.new(1, -10, 0, 30)
        _5.ZIndex = 17
        _5.AutoButtonColor = false
        _5.Font = Enum.Font.GothamBold
        _5.Text = Text
        _5.TextColor3 = Color3.fromRGB(255, 255, 255)
        _5.TextSize = 12.000
        
        UICorner_9.CornerRadius = UDim.new(0, 4)
        UICorner_9.Parent = _5
        
        local UIStroke96 = Instance.new("UIStroke")
        UIStroke96.Thickness = 1.2
        UIStroke96.Parent = _5
        UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
        UIStroke96.Color = _G.Color
        UIStroke96.Transparency = 1
        
        if table.find(DropTable, Text) then
            TweenService:Create(_5, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextColor3 = Color3.fromRGB(0, 200, 200)}):Play()
        end
        
        _5.MouseEnter:Connect(function()
            TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Transparency = 0.10}):Play()
        end)
        
        _5.MouseLeave:Connect(function()
            TweenService:Create(UIStroke96, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Transparency = 1}):Play()
        end)
        
        _5.MouseButton1Click:Connect(function()
            if not table.find(DropTable, Text) then
                table.insert(DropTable, Text)
                callback(DropTable, Text)
                Text_2.Text = table.concat(DropTable, ", ")
                TweenService:Create(_5, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextColor3 = Color3.fromRGB(0, 200, 200)}):Play()
            else
                TweenService:Create(_5, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                for i2, v2 in pairs(DropTable) do
                    if v2 == Text then
                        table.remove(DropTable, i2)
                        Text_2.Text = table.concat(DropTable, ", ")
                    end
                end
                callback(DropTable, Text)
            end
        end)
    end

    for i, v in next, list do
        Dropfunc:Add(v)
    end
    
    RegisterComponent("MultiDropdown", text, MainDropDown)
    
    return Dropfunc
end

-- ==========================================
-- 🔥 Slider Function
-- ==========================================
function functionitem:Slider(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
    local options = ParseArguments(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
    local text = options.Name
    local floor = options.floor or false
    local de = options.Value or 1
    local min = options.Min or 1
    local max = options.Max or 2
    local callback = options.Callback or options.Format or function() end
    local Flag = options.Flag

    local SliderFrame = Instance.new("Frame")
    local LabelNameSlider = Instance.new("TextLabel")
    local ShowValueFrame = Instance.new("Frame")
    local CustomValue = Instance.new("TextBox")
    local ShowValueFrameUICorner = Instance.new("UICorner")
    local ValueFrame = Instance.new("Frame")
    local ValueFrameUICorner = Instance.new("UICorner")
    local PartValue = Instance.new("Frame")
    local PartValueUICorner = Instance.new("UICorner")
    local MainValue = Instance.new("Frame")
    local MainValueUICorner = Instance.new("UICorner")
    local sliderfunc = {}

    SliderFrame.Name = text
    SliderFrame.Parent = SectionContainer
    SliderFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    SliderFrame.BackgroundTransparency = 0.700
    SliderFrame.Position = UDim2.new(0.109489053, 0, 0.708609283, 0)
    SliderFrame.Size = UDim2.new(0, 265, 0, 45)

    local UIStroke96 = Instance.new("UIStroke")
    UIStroke96.Thickness = 1.2
    UIStroke96.Parent = SliderFrame
    UIStroke96.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke96.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke96.Color = _G.Color
    UIStroke96.Transparency = 1

    SliderFrame.MouseEnter:Connect(function()
        TweenService:Create(
            UIStroke96,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.10}
        ):Play()
    end)

    SliderFrame.MouseLeave:Connect(function()
        TweenService:Create(
            UIStroke96,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 1}
        ):Play()
    end)

    local UICorner_7 = Instance.new("UICorner")
    UICorner_7.CornerRadius = UDim.new(0, 4)
    UICorner_7.Parent = SliderFrame

    LabelNameSlider.Name = "LabelNameSlider"
    LabelNameSlider.Parent = SliderFrame
    LabelNameSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    LabelNameSlider.BackgroundTransparency = 1.000
    LabelNameSlider.Position = UDim2.new(0.0729926974, 0, 0.0396823473, 0)
    LabelNameSlider.Size = UDim2.new(0, 182, 0, 25)
    LabelNameSlider.Font = Enum.Font.GothamBold
    LabelNameSlider.Text = tostring(text)
    LabelNameSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
    LabelNameSlider.TextSize = 11.000
    LabelNameSlider.TextXAlignment = Enum.TextXAlignment.Left

    ShowValueFrame.Name = "ShowValueFrame"
    ShowValueFrame.Parent = SliderFrame
    ShowValueFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    ShowValueFrame.Position = UDim2.new(0.733576655, 0, 0.0656082779, 0)
    ShowValueFrame.Size = UDim2.new(0, 58, 0, 21)

    CustomValue.Name = "CustomValue"
    CustomValue.Parent = ShowValueFrame
    CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
    CustomValue.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    CustomValue.Position = UDim2.new(0.5, 0, 0.5, 0)
    CustomValue.Size = UDim2.new(0, 55, 0, 21)
    CustomValue.Font = Enum.Font.GothamBold
    CustomValue.Text = ""
    CustomValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    CustomValue.TextSize = 11.000

    local UIStroke965 = Instance.new("UIStroke")
    UIStroke965.Thickness = 1.2
    UIStroke965.Parent = CustomValue
    UIStroke965.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke965.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke965.Color = _G.Color
    UIStroke965.Transparency = 0.10

    SliderFrame.MouseEnter:Connect(function()
        TweenService:Create(
            UIStroke965,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.5}
        ):Play()
    end)

    SliderFrame.MouseLeave:Connect(function()
        TweenService:Create(
            UIStroke965,
            TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.10}
        ):Play()
    end)

    ShowValueFrameUICorner.CornerRadius = UDim.new(0, 4)
    ShowValueFrameUICorner.Name = "ShowValueFrameUICorner"
    ShowValueFrameUICorner.Parent = ShowValueFrame

    ValueFrame.Name = "ValueFrame"
    ValueFrame.Parent = SliderFrame
    ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    ValueFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ValueFrame.Position = UDim2.new(0.5, 0, 0.8, 0)
    ValueFrame.Size = UDim2.new(0, 200, 0, 5)

    ValueFrameUICorner.CornerRadius = UDim.new(0, 30)
    ValueFrameUICorner.Name = "ValueFrameUICorner"
    ValueFrameUICorner.Parent = ValueFrame

    PartValue.Name = "PartValue"
    PartValue.Parent = ValueFrame
    PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
    PartValue.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    PartValue.BackgroundTransparency = 1.000
    PartValue.Position = UDim2.new(0.5, 0, 0.8, 0)
    PartValue.Size = UDim2.new(0, 200, 0, 5)

    PartValueUICorner.CornerRadius = UDim.new(0, 30)
    PartValueUICorner.Name = "PartValueUICorner"
    PartValueUICorner.Parent = PartValue

    MainValue.Name = "MainValue"
    MainValue.Parent = ValueFrame
    MainValue.BackgroundColor3 = _G.Color
    MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
    MainValue.BorderSizePixel = 0

    MainValueUICorner.CornerRadius = UDim.new(0, 30)
    MainValueUICorner.Name = "MainValueUICorner"
    MainValueUICorner.Parent = MainValue

    local ConneValue = Instance.new("Frame")
    ConneValue.Name = "ConneValue"
    ConneValue.Parent = PartValue
    ConneValue.AnchorPoint = Vector2.new(0.7, 0.7)
    ConneValue.BackgroundColor3 = _G.Color
    ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.5,0, 0)
    ConneValue.Size = UDim2.new(0, 10, 0, 10)
    ConneValue.BorderSizePixel = 0

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = ConneValue

    if floor == true then
        CustomValue.Text = tostring(de and string.format("%0.2f",(de / max) * (max - min) + min) or 0)
    else
        CustomValue.Text = tostring(de and math.floor((de / max) * (max - min) + min) or 0)
    end

    local function move(input)
        local pos = UDim2.new(
            math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
            0,
            0.5,
            0
        )
        local pos1 = UDim2.new(
            math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
            0,
            0,
            5
        )
        MainValue:TweenSize(pos1, "Out", "Sine", 0.2, true)
        ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
        if floor == true then
            local value = string.format("%.0f",((pos.X.Scale * max) / max) * (max - min) + min)
            CustomValue.Text = tostring(value)
            callback(value)
        else
            local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
            CustomValue.Text = tostring(value)
            callback(value)
        end
    end

    local dragging = false
    ConneValue.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    ConneValue.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    SliderFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    SliderFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    ValueFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    ValueFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            move(input)
        end
    end)
    CustomValue.FocusLost:Connect(function()
        if CustomValue.Text == "" then
            CustomValue.Text = de
        end
        if tonumber(CustomValue.Text) > max then
            CustomValue.Text = max
        end
        MainValue:TweenSize(UDim2.new((CustomValue.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
        ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.6, 0) , "Out", "Sine", 0.2, true)
        if floor == true then
            CustomValue.Text = tostring(CustomValue.Text and string.format("%.0f",(CustomValue.Text / max) * (max - min) + min) )
        else
            CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
        end
        pcall(callback, CustomValue.Text)
    end)

    function sliderfunc:Update(value)
        MainValue:TweenSize(UDim2.new((value or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
        ConneValue:TweenPosition(UDim2.new((value or 0)/max, 0.5, 0.5,0, 0) , "Out", "Sine", 0.2, true)
        CustomValue.Text = value
        pcall(function()
            callback(value)
        end)
    end

    RegisterComponent("Slider", text, SliderFrame)
    
    return sliderfunc
end

			function functionitem:AddColorpicker(text, preset, callback)
    local OldToggleColor = Color3.fromRGB(0, 0, 0)
    local OldColor = Color3.fromRGB(0, 0, 0)
    local OldColorSelectionPosition = nil
    local OldHueSelectionPosition = nil
    local ColorH, ColorS, ColorV = 1, 1, 1
    local RainbowColorPicker = false
    local ColorPickerInput = nil
    local ColorInput = nil
    local HueInput = nil

    local Colorpicker = Instance.new("Frame")
    local ColorpickerTitle = Instance.new("TextLabel")
    local ColorpickerFrameOutline = Instance.new("Frame")
    local ColorpickerFrameOutlineCorner = Instance.new("UICorner")
    local ColorpickerFrame = Instance.new("Frame")
    local ColorpickerFrameCorner = Instance.new("UICorner")
    local Color = Instance.new("ImageLabel")
    local ColorCorner = Instance.new("UICorner")
    local ColorSelection = Instance.new("ImageLabel")
    local Hue = Instance.new("ImageLabel")
    local HueCorner = Instance.new("UICorner")
    local HueGradient = Instance.new("UIGradient")
    local HueSelection = Instance.new("ImageLabel")
    local PresetClr = Instance.new("Frame")
    local PresetClrCorner = Instance.new("UICorner")

    Colorpicker.Name = "Colorpicker"
    Colorpicker.Parent = SectionContainer
    Colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Colorpicker.BackgroundTransparency = 1.000
    Colorpicker.Position = UDim2.new(0.0895741582, 0, 0.474232763, 0)
    Colorpicker.Size = UDim2.new(0, 403, 0, 175)

    ColorpickerTitle.Name = "ColorpickerTitle"
    ColorpickerTitle.Parent = Colorpicker
    ColorpickerTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerTitle.BackgroundTransparency = 1.000
    ColorpickerTitle.Position = UDim2.new(0, 5, 0, 0)
    ColorpickerTitle.Size = UDim2.new(0, 200, 0, 29)
    ColorpickerTitle.Font = Enum.Font.Gotham
    ColorpickerTitle.Text = text
    ColorpickerTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerTitle.TextSize = 14.000
    ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left

    ColorpickerFrameOutline.Name = "ColorpickerFrameOutline"
    ColorpickerFrameOutline.Parent = ColorpickerTitle
    ColorpickerFrameOutline.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerFrameOutline.Position = UDim2.new(-0.00100000005, 0, 0.991999984, 0)
    ColorpickerFrameOutline.Size = UDim2.new(0, 238, 0, 139)

    ColorpickerFrameOutlineCorner.CornerRadius = UDim.new(0, 3)
    ColorpickerFrameOutlineCorner.Name = "ColorpickerFrameOutlineCorner"
    ColorpickerFrameOutlineCorner.Parent = ColorpickerFrameOutline

    ColorpickerFrame.Name = "ColorpickerFrame"
    ColorpickerFrame.Parent = ColorpickerTitle
    ColorpickerFrame.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
    ColorpickerFrame.ClipsDescendants = true
    ColorpickerFrame.Position = UDim2.new(0.00899999978, 0, 1.06638515, 0)
    ColorpickerFrame.Selectable = true
    ColorpickerFrame.Size = UDim2.new(0, 234, 0, 135)

    ColorpickerFrameCorner.CornerRadius = UDim.new(0, 3)
    ColorpickerFrameCorner.Name = "ColorpickerFrameCorner"
    ColorpickerFrameCorner.Parent = ColorpickerFrame

    Color.Name = "Color"
    Color.Parent = ColorpickerFrame
    Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
    Color.Position = UDim2.new(0, 10, 0, 10)
    Color.Size = UDim2.new(0, 154, 0, 118)
    Color.ZIndex = 10
    Color.Image = "rbxassetid://4155801252"

    ColorCorner.CornerRadius = UDim.new(0, 3)
    ColorCorner.Name = "ColorCorner"
    ColorCorner.Parent = Color

    ColorSelection.Name = "ColorSelection"
    ColorSelection.Parent = Color
    ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
    ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorSelection.BackgroundTransparency = 1.000
    ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
    ColorSelection.Size = UDim2.new(0, 18, 0, 18)
    ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
    ColorSelection.ScaleType = Enum.ScaleType.Fit

    Hue.Name = "Hue"
    Hue.Parent = ColorpickerFrame
    Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Hue.Position = UDim2.new(0, 171, 0, 10)
    Hue.Size = UDim2.new(0, 18, 0, 118)

    HueCorner.CornerRadius = UDim.new(0, 3)
    HueCorner.Name = "HueCorner"
    HueCorner.Parent = Hue

    HueGradient.Color = ColorSequence.new {ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))}
    HueGradient.Rotation = 270
    HueGradient.Name = "HueGradient"
    HueGradient.Parent = Hue

    HueSelection.Name = "HueSelection"
    HueSelection.Parent = Hue
    HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
    HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    HueSelection.BackgroundTransparency = 1.000
    HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
    HueSelection.Size = UDim2.new(0, 18, 0, 18)
    HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"

    PresetClr.Name = "PresetClr"
    PresetClr.Parent = ColorpickerFrame
    PresetClr.BackgroundColor3 = preset
    PresetClr.Position = UDim2.new(0.846153855, 0, 0.0740740746, 0)
    PresetClr.Size = UDim2.new(0, 25, 0, 25)

    PresetClrCorner.CornerRadius = UDim.new(0, 3)
    PresetClrCorner.Name = "PresetClrCorner"
    PresetClrCorner.Parent = PresetClr

    local function UpdateColorPicker(nope)
        PresetClr.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
        Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
        _G.Color = PresetClr.BackgroundColor3 -- อัปเดต _G.Color โดยอัตโนมัติ
        pcall(callback, PresetClr.BackgroundColor3)
    end

    ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
    ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
    ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)

    PresetClr.BackgroundColor3 = preset
    Color.BackgroundColor3 = preset
    _G.Color = preset -- ตั้งค่าเริ่มต้นให้ _G.Color
    pcall(callback, PresetClr.BackgroundColor3)

    Color.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if ColorInput then
                ColorInput:Disconnect()
            end

            ColorInput = game:GetService("RunService").RenderStepped:Connect(function()
                local ColorX = (math.clamp(game.Players.LocalPlayer:GetMouse().X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
                local ColorY = (math.clamp(game.Players.LocalPlayer:GetMouse().Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
                ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                ColorS = ColorX
                ColorV = 1 - ColorY

                UpdateColorPicker(true)
            end)
        end
    end)

    Color.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if ColorInput then
                ColorInput:Disconnect()
            end
        end
    end)

    Hue.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if HueInput then
                HueInput:Disconnect()
            end

            HueInput = game:GetService("RunService").RenderStepped:Connect(function()
                local HueY = (math.clamp(game.Players.LocalPlayer:GetMouse().Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
                HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
                ColorH = 1 - HueY

                UpdateColorPicker(true)
            end)
        end
    end)

    Hue.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if HueInput then
                HueInput:Disconnect()
            end
        end
    end)
end
				return functionitem
			end
			return sections
		end
		return tabs
	end
return VectorHub
